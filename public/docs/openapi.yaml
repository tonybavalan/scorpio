openapi: 3.0.3
info:
  title: Scorpio
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://projectscorpio.ml'
paths:
  /api/customer:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      name: Tobiathon
                      phone_no: '9003515690'
                      email: itsme@tonythedev.tk
                      location: Chennai
                properties:
                  data:
                    type: array
                    example:
                      -
                        name: Tobiathon
                        phone_no: '9003515690'
                        email: itsme@tonythedev.tk
                        location: Chennai
                    items:
                      type: object
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: voluptas
                customername:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qvkhlemfirdcbtmbsigubcgljbnhsidnujegufwntfwhqgmgyiuwjivdcnjjzlvpaiwzfnwkybcheampjxloh
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: tremblay.lawrence@example.org
                phone_no:
                  type: string
                  description: ''
                  example: eum
                location:
                  type: string
                  description: ''
                  example: cumque
                password:
                  type: string
                  description: ''
                  example: possimus
              required:
                - name
                - customername
                - email
                - phone_no
                - location
                - password
      security: []
  '/api/customer/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the customer.'
        example: 1
        required: true
        schema:
          type: integer
  /api/driver:
    get:
      summary: 'Display a listing of the resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      name: 'Rabi Ray Rana'
                      phone_no: '9003515690'
                      email: tonybavalan@wowtruck.in
                      location: Chennai
                properties:
                  data:
                    type: array
                    example:
                      -
                        name: 'Rabi Ray Rana'
                        phone_no: '9003515690'
                        email: tonybavalan@wowtruck.in
                        location: Chennai
                    items:
                      type: object
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: dolor
                drivername:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: edzndtiqajovtlntwtxldmavpaowjrwwvhtnsobrzezfxltqvijfhqmfoyaznjcctzcbgcrptitjeds
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: bruen.damien@example.com
                phone_no:
                  type: string
                  description: ''
                  example: aspernatur
                location:
                  type: string
                  description: ''
                  example: doloribus
                password:
                  type: string
                  description: ''
                  example: et
              required:
                - name
                - drivername
                - email
                - phone_no
                - location
                - password
      security: []
  '/api/driver/{id}':
    get:
      summary: 'Display the specified resource.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the driver.'
        example: 1
        required: true
        schema:
          type: integer
  /api/customer/login:
    get:
      summary: 'Login using resource & credentials.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Bad Credentials'
                properties:
                  message:
                    type: string
                    example: 'Bad Credentials'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: jkautzer@example.com
                password:
                  type: string
                  description: ''
                  example: a
              required:
                - email
                - password
      security: []
  /api/driver/login:
    get:
      summary: 'Login using resource & credentials.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Bad credentials'
                properties:
                  message:
                    type: string
                    example: 'Bad credentials'
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: treutel.laurianne@example.org
                password:
                  type: string
                  description: ''
                  example: eaque
              required:
                - email
                - password
      security: []
  /api/customer/logout:
    get:
      summary: 'Logout using credentials.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/driver/logout:
    get:
      summary: 'Logout using credentials.'
      description: ''
      parameters:
        -
          in: header
          name: Content-Type
          description: ''
          example: application/json
          schema:
            type: string
        -
          in: header
          name: Accept
          description: ''
          example: application/json
          schema:
            type: string
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
tags:
  -
    name: Endpoints
    description: ''
